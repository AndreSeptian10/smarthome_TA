// Generated by view binder compiler. Do not edit!
package com.example.smarthome_ta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smarthome_ta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTestofflineBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonvoice;

  @NonNull
  public final EditText editTextTextPersonName;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final TextView txvResult;

  private ActivityTestofflineBinding(@NonNull RelativeLayout rootView, @NonNull Button buttonvoice,
      @NonNull EditText editTextTextPersonName, @NonNull RelativeLayout header,
      @NonNull TextView txvResult) {
    this.rootView = rootView;
    this.buttonvoice = buttonvoice;
    this.editTextTextPersonName = editTextTextPersonName;
    this.header = header;
    this.txvResult = txvResult;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTestofflineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTestofflineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_testoffline, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTestofflineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonvoice;
      Button buttonvoice = ViewBindings.findChildViewById(rootView, id);
      if (buttonvoice == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName;
      EditText editTextTextPersonName = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.txvResult;
      TextView txvResult = ViewBindings.findChildViewById(rootView, id);
      if (txvResult == null) {
        break missingId;
      }

      return new ActivityTestofflineBinding((RelativeLayout) rootView, buttonvoice,
          editTextTextPersonName, header, txvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
